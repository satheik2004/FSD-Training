Promise:

--A promise is a special javascript object that represents the eventual completion (or failure) 
of an asynchronous operation

it allows to handle asynchronous tasks more efficiently than callbacks

THREE STATES:
1.pending:The initial state, the promise is still waiting for the operation to finish
2.fulfilled:The operation completed successfully
3.rejected:The operation failed

explanation:
1.To create a promise - new promise()
Two paremeters-
resolve--to mark the promise as success
reject--mark it as failed

2.Handling the result:
.then() method is called when promise is fulfilled.It will receive the result from resolve()
.catch() method is called if the promise is rejected.It will receive the result from reject()

Chaining Promise:
Ex:

let promise=new Promise((resolve,reject)=>{
    resolve(5);  //initial resolve value is 5
})
promise
.then(result=>{
    console.log(result);
    return result*2;
})
.then(result=>{
    console.log(result);
    return result+3  //return a new value
})
.then(result=>{
    console.log(result);
})
.catch(error=>{
    console.log("error",error);
})

Ex:promise with setTimeout
--asynchronous task using setTimeout,and the promise will resolve after a certain amount oof setTimeout
